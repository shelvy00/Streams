{"ast":null,"code":"var _jsxFileName = \"/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button negative\",\n        children: \"Detele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 6\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"StreamDelete\", /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Delete Stream\",\n        content: \"Are you sure you want to delete this stream?\",\n        actions: this.renderActions(),\n        onDismiss: () => history.push(\"/\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","connect","history","fetchStream","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","render","push","mapStateToProps","state","ownProps","stream","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAEzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACf,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMC;;AAEFC,EAAAA,MAAM,GAAG;AACR,wBACE;AAAA,8CAEE,QAAC,KAAD;AACA,QAAA,KAAK,EAAC,eADN;AAEA,QAAA,OAAO,EAAC,8CAFR;AAGA,QAAA,OAAO,EAAE,KAAKD,aAAL,EAHT;AAIA,QAAA,SAAS,EAAE,MAAMT,OAAO,CAACW,IAAR,CAAa,GAAb;AAJjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUA;;AA1BwC;;AA6B3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB;AACzC,SAAO;AAAEC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACF,CAFD;;AAIA,eAAeT,OAAO,CAACa,eAAD,EAAkB;AAACX,EAAAA;AAAD,CAAlB,CAAP,CAAyCC,YAAzC,CAAf","sourcesContent":["import React from 'react'\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id)\n  }\n\n  renderActions() {\n   return (\n     <React.Fragment>\n       <button className=\"ui button negative\">Detele</button>\n       <button className=\"ui button\">Cancel</button>\n     </React.Fragment>\n    );\n   }\n\n  render() { \n   return (\n     <div>\n       StreamDelete\n       <Modal \n       title=\"Delete Stream\" \n       content=\"Are you sure you want to delete this stream?\" \n       actions={this.renderActions()} \n       onDismiss={() => history.push(\"/\")} />\n     </div>\n   );\n  } \n}\n\nconst mapStateToProps = (state,ownProps) => {\n   return { stream: state.streams[ownProps.match.params.id] }\n};\n\nexport default connect(mapStateToProps, {fetchStream}) (StreamDelete);\n"]},"metadata":{},"sourceType":"module"}