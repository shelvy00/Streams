{"ast":null,"code":"var _jsxFileName = \"/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamCreate.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class StreamCreate extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderInput = _ref => {\n      let {\n        input,\n        label,\n        meta\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 8\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  renderError(_ref2) {\n    let {\n      error,\n      touched\n    } = _ref2;\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 8\n      }, this);\n    }\n\n    ;\n  }\n\n  onSubmit(onTop) {\n    console.log(onTop);\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"you must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Component","Field","reduxForm","StreamCreate","renderInput","input","label","meta","renderError","error","touched","onSubmit","onTop","console","log","render","props","handleSubmit","validate","formValues","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,OAAO,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAY1CI,WAZ0C,GAY5B,QAA4B;AAAA,UAA3B;AAAEC,QAAAA,KAAF;AAASC,QAAAA,KAAT;AAAgBC,QAAAA;AAAhB,OAA2B;AACxC,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA,oBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEC,sBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFD,EAGE,KAAKG,WAAL,CAAiBD,IAAjB,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KApByC;AAAA;;AAE1CC,EAAAA,WAAW,QAAqB;AAAA,QAApB;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAoB;;AAC9B,QAAIA,OAAO,IAAID,KAAf,EAAsB;AACpB,0BACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AAKD;;AAAA;AACF;;AAYDE,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AACA,wBACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAE,KAAKA,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAA1C;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKP,WAApC;AAAiD,QAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,QAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAnCyC;AAoC3C;;AAED,MAAMc,QAAQ,GAAIC,UAAD,IAAgB;AAC/B,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACD,UAAU,CAACE,KAAhB,EAAuB;AACrBD,IAAAA,MAAM,CAACC,KAAP,GAAc,wBAAd;AACD;;AAED,MAAI,CAACF,UAAU,CAACG,WAAhB,EAA6B;AAC3BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AACD,SAAOF,MAAP;AACD,CAXD;;AAaA,eAAelB,SAAS,CAAC;AAAEqB,EAAAA,IAAI,EAAE,cAAR;AAAwBL,EAAAA,QAAQ,EAAEA;AAAlC,CAAD,CAAT,CAAwDf,YAAxD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Field, reduxForm } from 'redux-form';\n\nexport class StreamCreate extends Component {\n\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n       <div className=\"ui error message\">\n         <div className=\"header\">{error}</div>\n       </div>\n      );\n    };\n  };\n\n  renderInput = ({ input, label, meta }) => {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n       <input {...input} />\n       {this.renderError(meta)}\n      </div> \n    );\n  };\n\n  onSubmit(onTop) {\n    console.log(onTop)\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title= \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"you must enter a description\";\n  }\n  return errors;\n}\n\nexport default reduxForm({ form: \"streamCreate\", validate: validate })(StreamCreate);\n"]},"metadata":{},"sourceType":"module"}