{"ast":null,"code":"var _jsxFileName = \"/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamCreate.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class StreamCreate extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n      this.props.createStream(formValues);\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"you must enter a description\";\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: \"streamCreate\",\n  validate: validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream\n})(formWrapped);","map":{"version":3,"sources":["/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Component","connect","createStream","StreamForm","StreamCreate","onSubmit","formValues","console","log","props","render","handleSubmit","renderInput","validate","errors","title","description","formWrapped","reduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,OAAO,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAE1CK,QAF0C,GAE9BC,UAAD,IAAgB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,WAAKG,KAAL,CAAWP,YAAX,CAAwBI,UAAxB;AACD,KALyC;AAAA;;AAO1CI,EAAAA,MAAM,GAAG;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,wBACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAE,KAAKA,KAAL,CAAWE,YAAX,CAAwB,KAAKN,QAA7B,CAA1C;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKO,WAApC;AAAiD,QAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,QAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhByC;AAiB3C;;AAED,MAAMC,QAAQ,GAAIP,UAAD,IAAgB;AAC/B,QAAMQ,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACR,UAAU,CAACS,KAAhB,EAAuB;AACrBD,IAAAA,MAAM,CAACC,KAAP,GAAc,wBAAd;AACD;;AAED,MAAI,CAACT,UAAU,CAACU,WAAhB,EAA6B;AAC3BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AACD,SAAOF,MAAP;AACD,CAXD;;AAaA,MAAMG,WAAW,GAAGC,SAAS,CAAC;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBN,EAAAA,QAAQ,EAAEA;AAAlC,CAAD,CAAT,CAAwDT,YAAxD,CAApB;AAEA,eAAeH,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAiCe,WAAjC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nexport class StreamCreate extends Component {\n\n  onSubmit = (formValues) => {\n    console.log(formValues);\n    this.props.createStream(formValues);\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title= \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"you must enter a description\";\n  }\n  return errors;\n}\n\nconst formWrapped = reduxForm({ form: \"streamCreate\", validate: validate })(StreamCreate);\n\nexport default connect(null, { createStream }) (formWrapped);\n"]},"metadata":{},"sourceType":"module"}