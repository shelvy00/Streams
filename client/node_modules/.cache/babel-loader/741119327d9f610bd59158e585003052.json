{"ast":null,"code":"var _jsxFileName = \"/Users/shelvymurphy-brown/Desktop/streams/client/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class GoogleAuth extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      // This is a CallBack function, Make sure you make it an arrow function so it is Bind to the component\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        // Initializing\n        clientId: \"588976460688-rq8sjcgdktvi7l21ej1e6nc2a45c3uv7.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance(); // Getting the Reference to the Auth Library or Objects\n\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        }); // Updating our component level State\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    // Helper Function\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), \"Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), \"Sign In with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default connect(null, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/shelvymurphy-brown/Desktop/streams/client/src/components/GoogleAuth.js"],"names":["React","Component","connect","signIn","signOut","GoogleAuth","state","isSignedIn","onAuthChange","setState","auth","get","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,OAAO,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACxCK,KADwC,GAChC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADgC;;AAAA,SAgBtCC,YAhBsC,GAgBtBD,UAAD,IAAgB;AAAE;AAC/B,WAAKE,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,OAAd;AACD,KAlBqC;;AAAA,SAoBtCC,aApBsC,GAoBtB,MAAM;AACpB,WAAKF,IAAL,CAAUP,MAAV;AACD,KAtBqC;;AAAA,SAwBtCU,cAxBsC,GAwBrB,MAAM;AACrB,WAAKH,IAAL,CAAUN,OAAV;AACD,KA1BqC;AAAA;;AAGxCU,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AAAE;AACtBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACZ,aAAKZ,IAAL,GAAYK,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CADY,CACoC;;AAChD,aAAKf,QAAL,CAAc;AAAEF,UAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,SAAd,EAFY,CAE8C;;AAC1D,aAAKD,IAAL,CAAUH,UAAV,CAAqBkB,MAArB,CAA4B,KAAKjB,YAAjC;AACD,OAPD;AAQH,KATD;AAUD;;AAcHkB,EAAAA,gBAAgB,GAAG;AAAG;AAClB,QAAI,KAAKpB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEM,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAC7B,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKM,cAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMH,KAPK,MAOA;AACF,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKD,aAAtB;AAAqC,QAAA,SAAS,EAAC,sBAA/C;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMH;AACF;;AAEHe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKD,gBAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAtDuC;AAyD1C,eAAexB,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,MAAF;AAASC,EAAAA;AAAT,CAAP,CAAP,CAAmCC,UAAnC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nexport class GoogleAuth extends Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n      window.gapi.load(\"client:auth2\", () => {\n          window.gapi.client.init({ // Initializing\n              clientId: \"588976460688-rq8sjcgdktvi7l21ej1e6nc2a45c3uv7.apps.googleusercontent.com\",\n              scope: \"email\"\n          }).then(() => {\n            this.auth = window.gapi.auth2.getAuthInstance() // Getting the Reference to the Auth Library or Objects\n            this.setState({ isSignedIn: this.auth.isSignedIn.get() }) // Updating our component level State\n            this.auth.isSignedIn.listen(this.onAuthChange);\n          });\n      });\n    };\n\n    onAuthChange = (isSignedIn) => { // This is a CallBack function, Make sure you make it an arrow function so it is Bind to the component\n      this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n    };\n\n    onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  \n  renderAuthButton() {  // Helper Function\n      if (this.state.isSignedIn === null) {\n          return null;\n      }else if (this.state.isSignedIn) {\n          return (\n            <button onClick={this.onSignOutClick} className=\"ui red google button\">\n              <i className=\"google icon\" />\n              Sign Out\n            </button>\n          );\n      }else {\n          return (\n            <button onClick={this.onSignInClick} className=\"ui red google button\">\n                <i className=\"google icon\"/>\n                Sign In with Google\n            </button>\n          );\n      }\n    };\n\n  render() {\n    return (\n      <div>\n        {this.renderAuthButton()}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { signIn,signOut }) (GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}