{"ast":null,"code":"var _jsxFileName = \"/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamEdit.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { formValues } from 'redux-form';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamEdit extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        initialValues: _pick(this.props.stream, \"title\", description),\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamEdit.js"],"names":["_","React","connect","formValues","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","console","log","props","match","params","id","componentDidMount","render","stream","_pick","description","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKvCC,QALuC,GAK3BN,UAAD,IAAgB;AACzBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACA,WAAKS,KAAL,CAAWP,UAAX,CAAsB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDZ,UAAlD;AACD,KARsC;AAAA;;AACvCa,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAODE,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAEF,wBACE;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,UAAD;AAAY,QAAA,aAAa,EAAEC,KAAK,CAAC,KAAKP,KAAL,CAAWM,MAAZ,EAAoB,OAApB,EAA6BE,WAA7B,CAAhC;AAA2E,QAAA,QAAQ,EAAE,KAAKX;AAA1F;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMC;;AArBsC;;AAwBzC,MAAMY,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeb,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAuDE,UAAvD,CAAf","sourcesContent":["import _ from 'lodash';\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { formValues } from 'redux-form';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  onSubmit = (formValues) => {\n    console.log(formValues);\n    this.props.editStream(this.props.match.params.id, formValues);\n  }\n\n  render() {\n   if (!this.props.stream) {\n     return <div>Loading...</div>\n   }\n\n  return (\n    <div>\n     <h3>Edit a Stream</h3>\n     <StreamForm initialValues={_pick(this.props.stream, \"title\", description)} onSubmit={this.onSubmit} />\n    </div>\n   );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n}\n\nexport default connect(mapStateToProps, { fetchStream, editStream }) (StreamEdit);\n"]},"metadata":{},"sourceType":"module"}