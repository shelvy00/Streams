{"ast":null,"code":"var _jsxFileName = \"/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderAdmin = stream => {\n      if (stream.userId === this.props.currentUserId) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right floated content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button primary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button negative\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.renderList = () => {\n      console.log(this.props.streams);\n      return this.props.streams.map(stream => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"large middle aligned icon camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description\",\n              children: stream.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 12\n          }, this)]\n        }, stream.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/shelvymurphy-brown/Desktop/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","renderAdmin","stream","userId","props","currentUserId","renderList","console","log","streams","map","title","description","id","componentDidMount","render","mapStateToProps","state","Object","values","auth","isSignedIn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKvCC,WALuC,GAKxBC,MAAD,IAAY;AACxB,UAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKC,KAAL,CAAWC,aAAjC,EAAgD;AAC9C,4BACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KAdsC;;AAAA,SAgBvCC,UAhBuC,GAgB1B,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,OAAvB;AACC,aAAO,KAAKL,KAAL,CAAWK,OAAX,CAAmBC,GAAnB,CAAuBR,MAAM,IAAI;AACvC,4BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,qBACI,KAAKD,WAAL,CAAiBC,MAAjB,CADJ,eAEG;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFH,eAGG;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,uBACGA,MAAM,CAACS,KADV,eAEE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,wBAA8BT,MAAM,CAACU;AAArC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHH;AAAA,WAA2BV,MAAM,CAACW,EAAlC;AAAA;AAAA;AAAA;AAAA,gBADF;AAUA,OAXM,CAAP;AAYF,KA9BsC;AAAA;;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,KAAL,CAAWN,YAAX;AACD;;AA+BDiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiC,KAAKT,UAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAzCsC;;AA4CzC,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAER,IAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACR,OAApB,CAAX;AAAyCJ,IAAAA,aAAa,EAAEY,KAAK,CAACG,IAAN,CAAWjB,MAAnE;AAA2EkB,IAAAA,UAAU,EAAEJ,KAAK,CAACG,IAAN,CAAWC;AAAlG,GAAP;AACD,CAFD;;AAIA,eAAexB,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,UAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin = (stream) => {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <button className=\"ui button primary\">Edit</button>\n          <button className=\"ui button negative\">Delete</button>\n        </div>\n      );\n    }\n  };\n\n  renderList = () => {\n    console.log(this.props.streams)\n     return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\" key={stream.id}>\n           {this.renderAdmin(stream)}\n           <i className=\"large middle aligned icon camera\" />\n           <div className=\"content\">\n             {stream.title}\n             <div className=\"description\">{stream.description}</div>\n           </div>\n        </div>\n      )\n     });\n  };\n\n  renderCreate\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { streams: Object.values(state.streams), currentUserId: state.auth.userId, isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { fetchStreams }) (StreamList);\n"]},"metadata":{},"sourceType":"module"}