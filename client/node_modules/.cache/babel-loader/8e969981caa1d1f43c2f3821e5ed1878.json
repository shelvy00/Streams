{"ast":null,"code":"var _jsxFileName = \"/Users/shelvymurphy-brown/Desktop/streams/client/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class GoogleAuth extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = () => {\n      // This is a CallBack function, Make sure you make it an arrow function so it is Bind to the component\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        // Initializing\n        clientId: \"588976460688-rq8sjcgdktvi7l21ej1e6nc2a45c3uv7.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance(); // Getting the Reference to the Auth Library or Objects\n\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        }); // Updating our component level State\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    // Helper Function\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I am signed in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I am not signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/shelvymurphy-brown/Desktop/streams/client/src/components/GoogleAuth.js"],"names":["React","Component","GoogleAuth","state","isSignedIn","onAuthChange","setState","auth","get","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACxCE,KADwC,GAChC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADgC;;AAAA,SAgBtCC,YAhBsC,GAgBvB,MAAM;AAAE;AACrB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,OAAd;AACD,KAlBqC;AAAA;;AAGxCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AAAE;AACtBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACZ,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CADY,CACoC;;AAChD,aAAKb,QAAL,CAAc;AAAEF,UAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,SAAd,EAFY,CAE8C;;AAC1D,aAAKD,IAAL,CAAUH,UAAV,CAAqBgB,MAArB,CAA4B,KAAKf,YAAjC;AACD,OAPD;AAQH,KATD;AAUD;;AAMHgB,EAAAA,gBAAgB,GAAG;AAAG;AAClB,QAAI,KAAKlB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEM,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAC7B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFK,MAEA;AACF,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACF;;AAEHkB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKD,gBAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApCuC;AAuC1C,eAAenB,UAAf","sourcesContent":["import React, { Component } from 'react'\n\nexport class GoogleAuth extends Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n      window.gapi.load(\"client:auth2\", () => {\n          window.gapi.client.init({ // Initializing\n              clientId: \"588976460688-rq8sjcgdktvi7l21ej1e6nc2a45c3uv7.apps.googleusercontent.com\",\n              scope: \"email\"\n          }).then(() => {\n            this.auth = window.gapi.auth2.getAuthInstance() // Getting the Reference to the Auth Library or Objects\n            this.setState({ isSignedIn: this.auth.isSignedIn.get() }) // Updating our component level State\n            this.auth.isSignedIn.listen(this.onAuthChange);\n          });\n      });\n    }\n\n    onAuthChange = () => { // This is a CallBack function, Make sure you make it an arrow function so it is Bind to the component\n      this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n    }\n  \n  renderAuthButton() {  // Helper Function\n      if (this.state.isSignedIn === null) {\n          return null;\n      }else if (this.state.isSignedIn) {\n          return <div>I am signed in!</div>;\n      }else {\n          return <div>I am not signed in</div>;\n      }\n    }\n\n  render() {\n    return (\n      <div>\n        {this.renderAuthButton()}\n      </div>\n    );\n  }\n}\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}