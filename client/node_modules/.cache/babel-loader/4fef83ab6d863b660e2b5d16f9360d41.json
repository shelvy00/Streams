{"ast":null,"code":"import { formValues } from \"redux-form\";\nimport streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async dispatch => {\n    const response = await streams.post(\"/streams\", formValues);\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.post(\"/streams\");\n    dispatch({\n      type: FETCH_STREAMS,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.post(`/streams/${id}`);\n    dispatch({\n      type: FETCH_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => {\n  return async dispatch => {\n    const response = await streams.post(`/streams/${id}`, formValues);\n    dispatch({\n      type: EDIT_STREAM,\n      payload: response.data\n    });\n  };\n};","map":{"version":3,"sources":["/Users/shelvymurphy-brown/Desktop/streams/client/src/actions/index.js"],"names":["formValues","streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","dispatch","response","post","data","fetchStreams","fetchStream","id","editStream"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,YAA1D,EAAwEC,aAAxE,EAAuFC,WAAvF,QAA0G,SAA1G;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAId,UAAD,IAAgB;AACxC,SAAO,MAAOe,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,IAAR,CAAa,UAAb,EAAyBjB,UAAzB,CAAvB;AACAe,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEP,aAAR;AAAuBQ,MAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACD,GAHD;AAIH,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAOJ,QAAP,IAAoB;AAC1B,UAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,IAAR,CAAa,UAAb,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEN,aAAR;AAAuBO,MAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACA,GAHD;AAIH,CALM;AAOP,OAAO,MAAME,WAAW,GAAIC,EAAD,IAAQ;AAC/B,SAAO,MAAON,QAAP,IAAoB;AAC1B,UAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,IAAR,CAAc,YAAWI,EAAG,EAA5B,CAAvB;AACAN,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEL,YAAR;AAAsBM,MAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAxC,KAAD,CAAR;AACA,GAHD;AAIH,CALM;AAOP,OAAO,MAAMI,UAAU,GAAG,CAACD,EAAD,EAAKrB,UAAL,KAAoB;AAC1C,SAAO,MAAOe,QAAP,IAAoB;AAC1B,UAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,IAAR,CAAc,YAAWI,EAAG,EAA5B,EAA+BrB,UAA/B,CAAvB;AACAe,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEH,WAAR;AAAqBI,MAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAvC,KAAD,CAAR;AACA,GAHD;AAIH,CALM","sourcesContent":["import { formValues } from \"redux-form\";\nimport streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"./types\";\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const createStream = (formValues) => {\n    return async (dispatch) => {\n      const response = await streams.post(\"/streams\", formValues);\n      dispatch({ type: CREATE_STREAM, payload: response.data })\n    };\n};\n\nexport const fetchStreams = () => {\n    return async (dispatch) => {\n     const response = await streams.post(\"/streams\");\n     dispatch({ type: FETCH_STREAMS, payload: response.data })\n    };\n};\n\nexport const fetchStream = (id) => {\n    return async (dispatch) => {\n     const response = await streams.post(`/streams/${id}`);\n     dispatch({ type: FETCH_STREAM, payload: response.data })\n    };\n};\n\nexport const editStream = (id, formValues) => {\n    return async (dispatch) => {\n     const response = await streams.post(`/streams/${id}`, formValues);\n     dispatch({ type: EDIT_STREAM, payload: response.data })\n    };\n};"]},"metadata":{},"sourceType":"module"}