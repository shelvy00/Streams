{"ast":null,"code":"import { FETCH_STREAM, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM, FETCH_STREAMS } from \"../actions/types\";\nimport _ from \"lodash\";\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, \"id\")\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n\n  ;\n});","map":{"version":3,"sources":["/Users/shelvymurphy-brown/Desktop/streams/client/src/reducers/streamReducer.js"],"names":["FETCH_STREAM","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","FETCH_STREAMS","_","state","action","type","mapKeys","payload","id","omit"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,EAAmDC,aAAnD,EAAkEC,aAAlE,QAAuF,kBAAvF;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,gBAAe,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,aAAL;AACC,aAAO,EAAE,GAAGE,KAAL;AAAY,WAAGD,CAAC,CAACI,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACD,SAAKV,YAAL;AACC,aAAO,EAAE,GAAGM,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACA,SAAKT,aAAL;AACC,aAAO,EAAE,GAAGK,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACA,SAAKR,WAAL;AACA,aAAO,EAAE,GAAGI,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACA,SAAKP,aAAL;AACA,aAAOE,CAAC,CAACO,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AACF;AACE,aAAOJ,KAAP;AAZN;;AAaC;AACH,CAfD","sourcesContent":["import { FETCH_STREAM, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM, FETCH_STREAMS } from \"../actions/types\";\nimport _ from \"lodash\";\n\nexport default (state = {}, action) => {\n   switch (action.type) {\n       case FETCH_STREAMS:\n        return { ...state, ..._.mapKeys(action.payload, \"id\") };   \n       case FETCH_STREAM:\n        return { ...state, [action.payload.id]: action.payload };\n        case CREATE_STREAM:\n         return { ...state, [action.payload.id]: action.payload };\n         case EDIT_STREAM:\n         return { ...state, [action.payload.id]: action.payload };   \n         case DELETE_STREAM:\n         return _.omit(state, action.payload)    \n       default:\n         return state;  \n   };\n};"]},"metadata":{},"sourceType":"module"}